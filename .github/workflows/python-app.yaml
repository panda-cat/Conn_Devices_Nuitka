# Combined workflow: CPython bytecode compile (.pyc) + Nuitka onefile build (Windows)
# Triggers on push (you can add workflow_dispatch for manual runs).
name: Build & Compile (Windows)

on: [push]

jobs:
  nuitka-build:
    name: Build single-file EXE with Nuitka
    runs-on: windows-latest
    timeout-minutes: 40

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install build deps (Nuitka + runtime deps)
        shell: pwsh
        run: |
          python -m pip install --upgrade pip wheel setuptools
          # Install runtime deps and Nuitka. If you have requirements.txt prefer using that.
          if (Test-Path requirements.txt) {
            pip install -r requirements.txt
            pip install nuitka
          } else {
            pip install nuitka netmiko openpyxl tqdm paramiko==3.5.0
          }
          # Show versions for debugging
          python -V
          pip show nuitka || python -m nuitka --version

      - name: Build myapp_scripts.py with Nuitka (onefile)
        shell: pwsh
        run: |
          # Adjust the command below to add extra options you need.
          # Common useful flags:
          #   --onefile        => produce single-file EXE
          #   --standalone     => standalone dir (useful for debugging)
          #   --output-dir=dist
          #   --enable-plugin=...  => enable plugins for data files, tkinter, qt, etc.
          #   --include-data-files=src;dest
          python -m nuitka --onefile --remove-output --output-dir=dist myapp_scripts.py

      - name: List dist contents
        shell: pwsh
        run: |
          if (Test-Path dist) {
            Get-ChildItem -Path dist -Recurse | ForEach-Object { Write-Host $_.FullName }
          } else {
            Write-Host "dist folder not found"
          }

      - name: Upload Nuitka artifact (exe)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nuitka-dist
          path: dist/*.exe
